Quiz: MongoDB Schema Design

What's the single most important factor in designing your application schema within MongoDB?
Matching the data access patterns of your application.
==========================================
Quiz: Modeling a Blog in Documents

Given the document schema that we proposed for the blog, how many collections would need to be accessed to display a blog post with its comments and tags?
1
===============================================
Quiz: Living Without Constraints

What does Living Without Constraints refer to?
Keeping your data consistent even though MongoDB lacks foreign key constraints
============================================
Quiz: Living Without Transactions

Which of the following operations operate atomically within a single document? Check all that apply.
Update
findAndModify
$addToSet (within an update)
$push within an update
==================================================
Quiz: One to One Relations

What's a good reason you might want to keep two documents that are related to each other one-to-one in separate collections? Check all that apply.
To reduce the working set size of your application.
Because the combined size of the documents would be larger than 16MB
=====================================================
Quiz: One to Many Relations

When is it recommended to represent a one to many relationship in multiple collections?
Whenever the many is large
==========================================================
Quiz: Trees

Given the following typical document for a e-commerce category hierarchy collection called categories
{
  _id: 34,
  name : "Snorkeling",
  parent_id: 12,
  ancestors: [12, 35, 90]
}
Which query will find all descendants of the snorkeling category?
db.categories.find({ancestors:34})
====================================================
4.1
The number of milestones for a company rarely exceeds 10 per year.
======================================================
4.2
Suppose you are working with a set of categories defined using the following tree structure. "Science" is a sub-category of "Books"; "Chemistry" and "Physics" are sub-categories of "Science"; and "Classical Mechanics" and "Quantum Mechanics" are sub categories of "Physics".

Books
    Science
        Chemistry
        Physics
            Classical Mechanics
            Quantum Mechanics
For this tree, each node is represented by a document in a collection called categories.

Which of the following schemas will make it possible to find() all descendants of a category using a single query. For example, all descendants of "Science" are "Chemistry", "Physics", "Classical Mechanics", and "Quantum Mechanics".

B
db.categories.insertOne({"_id": "Quantum Mechanics", "ancestors": ["Books", "Science", "Physics"], "parent": "Physics"})
db.categories.insertOne({"_id": "Classical Mechanics", "ancestors": ["Books", "Science", "Physics"], "parent": "Physics"})
db.categories.insertOne({"_id": "Physics", "ancestors": ["Books", "Science"], "parent": "Science"})
db.categories.insertOne({"_id": "Chemistry", "ancestors": ["Books", "Science"], "parent": "Science"})
db.categories.insertOne({"_id": "Science", "ancestors": ["Books"], "parent": "Books"})
db.categories.insertOne({"_id": "Books", "ancestors": [], "parent": null})
==================================================
4.3
Suppose you are working with a library catalog system containing collections for patrons, publishers, and books. Book documents maintain a field "available" that identifies how many copies are currently available for checkout. There is also a field "checkout" that holds a record of all patrons that are currently borrowing a copy of the book. For example, the document below indicates that the library owns four copies of "Good Book". Three are currently available for checkout. One has been checked out by patron "33457".

{
    _id: 123456789,
    title: "Good Book",
    author: [ "Sam Goodman", "Mike Smith" ],
    published_date: ISODate("2010-09-24"),
    publisher_id: "Smith Publishing",
    available: 3,
    checkout: [ { patron_id: "33457", date: ISODate("2012-10-15") } ]
}
Which of the following is the primary advantage to this design?

Can make atomic updates as books are checked out or turned in.
==================================================